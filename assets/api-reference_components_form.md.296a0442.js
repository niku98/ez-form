import{_ as t,o as e,c as l,O as a}from"./chunks/framework.f385a0f3.js";const x=JSON.parse('{"title":"EzForm Component API","description":"","frontmatter":{"title":"EzForm Component API"},"headers":[],"relativePath":"api-reference/components/form.md","filePath":"api-reference/components/form.md"}'),d={name:"api-reference/components/form.md"},r=a('<h1 id="ezform-component-api" tabindex="-1">EzForm Component API <a class="header-anchor" href="#ezform-component-api" aria-label="Permalink to &quot;EzForm Component API&quot;">​</a></h1><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">Form&#39;s name</td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;">form</td><td style="text-align:left;">A FormInstance to control form from outside</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance</code></a></td></tr><tr><td style="text-align:left;">initialValues</td><td style="text-align:left;">Initial values for form data</td><td style="text-align:left;"><code>Record&lt;string, any&gt;</code></td></tr><tr><td style="text-align:left;">rules</td><td style="text-align:left;">Validation rules</td><td style="text-align:left;"><code>Rules</code></td></tr><tr><td style="text-align:left;">validateTrigger</td><td style="text-align:left;">Config field validate trigger</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/validation.html#general"><code>ValidateTrigger | ValidateTrigger[]</code></a></td></tr><tr><td style="text-align:left;">validateMessages</td><td style="text-align:left;">Custom validation messages</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/validation.html#validatemessages"><code>ValidateMessages</code></a></td></tr><tr><td style="text-align:left;">classPrefix</td><td style="text-align:left;">Custom class prefix to generate form&#39;s class</td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;">preserveValues</td><td style="text-align:left;">Keep field value even when field removed</td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">onSubmit</td><td style="text-align:left;">Trigger after submitting the form and validating data successfully</td><td style="text-align:left;"><code>(values: any) =&gt; void</code></td></tr><tr><td style="text-align:left;">onError</td><td style="text-align:left;">Trigger after submitting the form and validating data failed</td><td style="text-align:left;"><code>(errors: ValidateError[]) =&gt; void</code></td></tr><tr><td style="text-align:left;">onChange</td><td style="text-align:left;">Trigger when value updated</td><td style="text-align:left;"><code>(values: any) =&gt; void</code></td></tr></tbody></table><h2 id="scoped-slot-default" tabindex="-1">Scoped slot - Default <a class="header-anchor" href="#scoped-slot-default" aria-label="Permalink to &quot;Scoped slot - Default&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">values</td><td style="text-align:left;">Form&#39;s values</td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;">errors</td><td style="text-align:left;">Form&#39;s errors</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/validation.html#general"><code>ValidateError[]</code></a></td></tr><tr><td style="text-align:left;">dirty</td><td style="text-align:left;">Determine if form is dirty</td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;">submit</td><td style="text-align:left;">Function to submit form</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;submit&#39;]</code></a></td></tr><tr><td style="text-align:left;">reset</td><td style="text-align:left;">Function to reset form&#39;s data and state</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;reset&#39;]</code></a></td></tr><tr><td style="text-align:left;">validate</td><td style="text-align:left;">Function to reset validate form&#39;s data</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;validate&#39;]</code></a></td></tr><tr><td style="text-align:left;">getFieldValue</td><td style="text-align:left;">Function to get form&#39;s field data</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;getFieldValue&#39;]</code></a></td></tr><tr><td style="text-align:left;">setFieldValue</td><td style="text-align:left;">Function to set form&#39;s field data</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;setFieldValue&#39;]</code></a></td></tr><tr><td style="text-align:left;">isDirty</td><td style="text-align:left;">Function to check if form&#39;s field is dirty</td><td style="text-align:left;"><a href="/ez-form/api-reference/types/form.html#forminstance"><code>FormInstance[&#39;isDirty&#39;]</code></a></td></tr></tbody></table>',7),o=[r];function n(i,s,f,c,m,g){return e(),l("div",null,o)}const h=t(d,[["render",n]]);export{x as __pageData,h as default};
